/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.DonorRole;

import Business.Calculator;
import Business.Donor.Donor;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Hospital.Location;
import Business.Hospital.LocationDirectory;
import Business.Organization.DonorOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author pacif_000
 */

public class SearchHospitalJPanel extends javax.swing.JPanel {
    private JPanel container;
    private Organization org;
    private UserAccount account;
    private Donor donor;
    private Enterprise ent;
    public double lat1;
    public double lon1;
    
    /**
     * Creates new form DonorWorkArea
     */
    public SearchHospitalJPanel(JPanel container, Organization org, UserAccount account, Donor donor, Enterprise ent) {
        initComponents();
        this.container=container;
        this.org=org;
        this.account=account;
        this.donor=donor;
        this.ent=ent;
        getPatient();
        populateHospitalJTable();
    
    }
    
    public void getPatient(){
    
        for(Organization o: ent.getOrganizationDirectory().getOrganizationList()){
//        Organization o=(DonorOrganization) org;
        if(o instanceof DonorOrganization){
           DonorOrganization or=(DonorOrganization) o;
//           for(UserAccount acct :org.getUserAccountDirectory().getUserAccountList()){
//                account=acct;
        for (Employee e : or.getEmployeeDirectory().getEmployeeList()){
            
            
            
            
                Object[] em = new Object[1];
                em[0]=e.getName();
                if(em[0].equals(account.getUsername())){
                donor = (Donor)e;
                    lat1=donor.getDetails().getLatitude();
                    lon1=donor.getDetails().getLongitude();
                
                }
        }
            
            }
            
        }
        
    }
    
    public void populateHospitalJTable(){
        
        Calculator c = new Calculator();
        DefaultTableModel model = (DefaultTableModel) hospitalJTable.getModel();
        hospitalJTable.setAutoCreateRowSorter(true);
        model.setRowCount(0);
        for(Location l: ent.getLocationDirectory().getLocationList()){
//        Organization o=(DonorOrganization) org;
//        if(o instanceof DonorOrganization){
//           DonorOrganization or=(DonorOrganization) o;
//           for(UserAccount acct :org.getUserAccountDirectory().getUserAccountList()){
//                account=acct;
//        for (Employee e : or.getEmployeeDirectory().getEmployeeList()){
            Object[] row = new Object[6];
            row[0] = ent.getName();
            row[2]= c.calculateDistance(lat1, lon1, l.getLocDetails().getLatitude(), l.getLocDetails().getLongitude());
            row[1] = l.getLocDetails().getLocationName();
            row[3] = l.getLocDetails().getLatitude();
            row[4] = l.getLocDetails().getLongitude();
            
            model.addRow(row);
             
           }
                
//        }
            
//            }
            
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        hospitalJTable = new javax.swing.JTable();
        backJButton = new javax.swing.JButton();

        hospitalJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Name", "Location", "Distance", "Latitude", "Longitude"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(hospitalJTable);

        backJButton.setText("<<Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(backJButton)
                .addContainerGap(311, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(223, Short.MAX_VALUE)
                .addComponent(backJButton)
                .addGap(54, 54, 54))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        container.remove(this);
        CardLayout layout = (CardLayout)container.getLayout();
        layout.previous(container);

    }//GEN-LAST:event_backJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JTable hospitalJTable;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
